# 1)	Требуется проверить, возможно ли из представленных отрезков
# условной длины сформировать треугольник. Для этого создайте класс TriangleChecker,
# принимающий только положительные числа. С помощью метода is_triangle()
# возвращаются следующие значения (в зависимости от ситуации):
# ●	Ура, можно построить треугольник!
# ●	С отрицательными числами ничего не выйдет!
# ●	Жаль, но из этого треугольник не сделать.

class TriangleChecker:

    def __init__(self):
        self.a = float(input('Введите первую сторону треугольника: '))
        self.b = float(input('Введите вторую сторону треугольника: '))
        self.c = float(input('Введите третью сторону треугольника: '))

    def is_triangle(self):
        if self.a <= 0 or self.b <= 0 or self.c <= 0:
            print('С отрицательными числами ничего не выйдет!')
        elif (self.a + self.b > self.c) and (self.a + self.c > self.b) and (self.b + self.c > self.a):
            print('Ура, можно построить треугольник!')
        else:
            print('Жаль, но из этого треугольник не сделать.')


triangle = TriangleChecker()
triangle.is_triangle()
